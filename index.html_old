<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Î°úÎòê Î≤àÌò∏ ÏÉùÏÑ±Í∏∞</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
            color: white;
        }
        .container {
            text-align: center;
            padding: 30px;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            max-width: 90%;
            width: 400px;
            position: relative;
            margin-bottom: 40px; /* ÌïòÎã® Ïó¨Î∞± Ï∂îÍ∞Ä */
        }
        .logo {
            font-size: 60px;
            color: #FFD700;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }
        .title {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
        }
        .slogan {
            font-size: 24px;
            color: #FF4500;
            margin-bottom: 30px;
            line-height: 1.8;
            font-weight: bold;
        }
        .slogan .highlight {
            font-size: 32px;
            display: inline-flex;
            align-items: center;
            gap: 10px;
        }
        .slogan .emoji {
            font-size: 36px;
        }
        .numbers-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: min(2vw, 10px);
            width: 100%;
            padding: 10px;
        }
        .number-circle-wrapper {
            width: calc(16.666% - 10px);
            min-width: 35px;
            max-width: 50px;
            aspect-ratio: 1;
            position: relative;
            margin: 5px;
        }
        .number-circle {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            transition: transform 0.2s;
        }
        .number-circle .number-text {
            color: white;
            font-weight: bold;
            font-size: clamp(14px, 4vw, 20px);
        }
        .number-circle:hover {
            transform: scale(1.1);
        }
        .button {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }
        .loading {
            display: none;
            margin: 20px 0;
        }
        .loading-text {
            color: #333;
            margin-top: 20px;
            font-size: clamp(12px, 3.5vw, 16px);
            text-align: center;
            padding: 0 10px;
            line-height: 1.4;
            white-space: nowrap;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .loader {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #4CAF50;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        .money-rain {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }
        .money {
            position: absolute;
            animation: fall linear infinite;
            opacity: 0.7;
        }
        .money.size-small { font-size: 16px; }
        .money.size-medium { font-size: 24px; }
        .money.size-large { font-size: 32px; }
        
        @keyframes fall {
            0% { transform: translateY(-20px) rotate(0deg); opacity: 0.7; }
            100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
        }
        /* Í∏∞Ï°¥ Ïä§ÌÉÄÏùº Ïú†ÏßÄ */
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .modal {
            background-color: white;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            text-align: center;
            max-width: 90%;
            width: 300px;
        }
        .modal-title {
            color: #333;
            font-size: 20px;
            margin-bottom: 20px;
        }
        .game-options {
            display: grid;
            gap: 10px;
            margin-bottom: 20px;
        }
        .game-option {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            border: none;
            padding: 12px;
            border-radius: 15px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s ease;
        }
        .game-option:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        .game-set {
            background-color: rgba(255, 255, 255, 0.9);
            padding: 15px;
            border-radius: 15px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 600px;
        }
        .game-set-title {
            color: #333;
            font-size: 16px;
            margin-bottom: 10px;
            font-weight: bold;
        }
        /* Í∏∞Ï°¥ Ïä§ÌÉÄÏùº Ïú†ÏßÄ */
        .creator-info {
            position: fixed;
            bottom: 10px;
            right: 20px;
            color: rgba(255, 255, 255, 0.8);
            font-size: 14px;
            font-style: italic;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
            z-index: 100;
        }
        @media (max-width: 480px) {
            .number-circle-wrapper {
                width: calc(16.666% - 6px);
                min-width: 30px;
                margin: 3px;
            }
            .game-set {
                padding: 10px;
            }
            .game-set-title {
                font-size: 14px;
                margin-bottom: 5px;
            }
            .loading-text {
                font-size: clamp(10px, 3vw, 14px);
            }
            .creator-info {
                font-size: 12px;
                bottom: 5px;
                right: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="money-rain" id="moneyRain"></div>
    <div class="modal-overlay" id="gameModal">
        <div class="modal">
            <h2 class="modal-title">Î™á Í≤åÏûÑÏùÑ ÏÉùÏÑ±Ìï†ÍπåÏöî?</h2>
            <div class="game-options">
                <button class="game-option" data-games="1">1Í≤åÏûÑ</button>
                <button class="game-option" data-games="2">2Í≤åÏûÑ</button>
                <button class="game-option" data-games="3">3Í≤åÏûÑ</button>
                <button class="game-option" data-games="4">4Í≤åÏûÑ</button>
                <button class="game-option" data-games="5">5Í≤åÏûÑ</button>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="logo">
            <i class="fas fa-gem"></i>
        </div>
        <h1 class="title">Î°úÎòê Î≤àÌò∏ ÏÉùÏÑ±Í∏∞</h1>
        <p class="slogan">
            <span class="highlight">ÎÖ∏Î¶¨Ïûê, ÏùºÌôïÏ≤úÍ∏à! <span class="emoji">üíµ</span></span><br>
            <span class="highlight">Í∑∏ÎßåÌïòÏûê, ÏõîÍ∏âÏüÅÏù¥! <span class="emoji">üò¢</span></span>
        </p>
        <div id="gamesContainer"></div>
        <div class="loading" id="loading">
            <div class="loader"></div>
            <p class="loading-text">...Í∏∞Ï°¥ Î°úÎòê ÎãπÏ≤® Ìå®ÌÑ¥ÏùÑ ÌÜµÍ≥ÑÏ†Å/ÏàòÎ¶¨Ï†ÅÏúºÎ°ú Î∂ÑÏÑùÌïòÍ≥† ÏûàÏäµÎãàÎã§...</p>
        </div>
        <button class="button" id="generateBtn">Ïã§Ìñâ</button>
    </div>
    <div class="creator-info">created by koooo.</div>

    <script>
        function getNumberColor(num) {
            if (num <= 10) return '#FFD700';      // ÎÖ∏ÎûÄÏÉâ
            if (num <= 20) return '#1E90FF';      // ÌååÎûÄÏÉâ
            if (num <= 30) return '#FF4500';      // Îπ®Í∞ÑÏÉâ
            if (num <= 40) return '#808080';      // ÌöåÏÉâ
            return '#32CD32';                     // Ï¥àÎ°ùÏÉâ
        }

        function generateNumbers() {
            const numbers = new Set();
            while (numbers.size < 6) {
                numbers.add(Math.floor(Math.random() * 45) + 1);
            }
            return [...numbers].sort((a, b) => a - b);
        }

        function createNumberCircle(number) {
            const wrapper = document.createElement('div');
            wrapper.className = 'number-circle-wrapper';
            
            const circle = document.createElement('div');
            circle.className = 'number-circle';
            circle.style.backgroundColor = getNumberColor(number);
            
            const numberText = document.createElement('div');
            numberText.className = 'number-text';
            numberText.textContent = number;
            
            circle.appendChild(numberText);
            wrapper.appendChild(circle);
            return wrapper;
        }

        function displayGameSet(numbers, gameIndex) {
            const gameSet = document.createElement('div');
            gameSet.className = 'game-set';
            
            const title = document.createElement('div');
            title.className = 'game-set-title';
            title.textContent = `${gameIndex}Î≤àÏß∏ Í≤åÏûÑ`;
            gameSet.appendChild(title);

            const numbersContainer = document.createElement('div');
            numbersContainer.className = 'numbers-container';
            
            numbers.forEach(number => {
                numbersContainer.appendChild(createNumberCircle(number));
            });
            
            gameSet.appendChild(numbersContainer);
            return gameSet;
        }

        function displayMultipleGames(gameCount) {
            const container = document.getElementById('gamesContainer');
            container.innerHTML = '';
            
            for (let i = 1; i <= gameCount; i++) {
                const numbers = generateNumbers();
                const gameSet = displayGameSet(numbers, i);
                container.appendChild(gameSet);
            }
        }

        // Îèà ÎπÑ Ìö®Í≥º ÏÉùÏÑ±
        function createMoneyRain() {
            const moneyRain = document.getElementById('moneyRain');
            const symbols = ['üí∞', 'üíé', 'üíµ', 'üí≥', 'üèÜ', 'üé∞', 'üí∏', 'ü§ë', 'üëë'];
            const sizes = ['size-small', 'size-medium', 'size-large'];
            const money = document.createElement('span');
            money.className = `money ${sizes[Math.floor(Math.random() * sizes.length)]}`;
            money.textContent = symbols[Math.floor(Math.random() * symbols.length)];
            money.style.left = Math.random() * 100 + '%';
            money.style.animationDuration = (Math.random() * 3 + 2) + 's';
            money.style.transform = `rotate(${Math.random() * 360}deg)`;
            moneyRain.appendChild(money);
            
            setTimeout(() => {
                money.remove();
            }, 5000);
        }

        // Ï£ºÍ∏∞Ï†ÅÏúºÎ°ú Îèà ÎπÑ Ìö®Í≥º ÏÉùÏÑ±
        setInterval(createMoneyRain, 500);

        // Í≤åÏûÑ Ïàò ÏÑ†ÌÉù Î™®Îã¨ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        document.querySelectorAll('.game-option').forEach(button => {
            button.addEventListener('click', function() {
                const gameCount = parseInt(this.dataset.games);
                const modal = document.getElementById('gameModal');
                const loading = document.getElementById('loading');
                
                modal.style.display = 'none';
                loading.style.display = 'block';

                setTimeout(() => {
                    loading.style.display = 'none';
                    displayMultipleGames(gameCount);
                    const generateBtn = document.getElementById('generateBtn');
                    generateBtn.textContent = 'Îã§Ïãú Ïã§Ìñâ';
                    generateBtn.style.display = 'block';
                }, 3000);
            });
        });

        // Ïã§Ìñâ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
        document.getElementById('generateBtn').addEventListener('click', function() {
            const modal = document.getElementById('gameModal');
            const gamesContainer = document.getElementById('gamesContainer');
            
            this.style.display = 'none';
            gamesContainer.innerHTML = '';
            modal.style.display = 'flex';
        });
    </script>
</body>
</html> 
